from pyrogram import Client, filters
from pyrogram.types import Message, ChatMemberUpdated
from pyrogram.enums import ChatMemberStatus
from Devine import app
from Devine.misc import SUDOERS
from Devine.utils.database import add_sudo, remove_sudo
from Devine.utils.extraction import extract_user
from config import filter as BANNED_USERS, OWNER_ID, SPECIAL_USER as SPECIAL_USER_ID, DISASTER_LOG as LOG_CHANNEL_ID  

SPECIAL_USERS = {SPECIAL_USER_ID}

async def log_new_sudo_user(user, adder, chat):
    log_message = (
        f"<b>{user.mention}  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥Äs ·¥Ä s·¥ú·¥Ö·¥è·¥á Ä.\n\n</b>"
        f"<b>·¥ús·¥á Ä ·¥Ö·¥Ä·¥õ·¥Ä -\n</b>"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ <code>{user.id}</code></b>\n"
        f"<b> ú·¥Ä…¥·¥Ö ü·¥á ‚åØ @{user.username if user.username else 'none'}</b>\n\n"
        f"<b>·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö  ô è {adder.mention}</b>\n"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ <code>{adder.id}</code>\n\n"
        f"<b>·¥Ä ô·¥è·¥ú·¥õ ·¥Ñ ú·¥Ä·¥õ -\n</b>"
        f"<b>·¥Ö·¥ás…™…¢…¥·¥Ä·¥õ…™·¥è…¥ ‚åØ {chat.title}\n</b>"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ <code>{chat.id}</b>\n"
        f"<b>·¥Ñ ú·¥Ä·¥õ  ú·¥Ä…¥·¥Ö ü·¥á ‚åØ @{chat.username if chat.username else 'none'}</b>"
    )
    await app.send_message(LOG_CHANNEL_ID, log_message)  

async def log_removed_sudo_user(user, remover, chat):
    log_message = (
        f"<b>·¥Ä·¥Ñ·¥Ñ·¥áss {user.mention}  ú·¥Äs  ô·¥á·¥á…¥  Ä·¥á·¥†·¥è·¥ã·¥á·¥Ö.</b>\n\n"
        f"<b>·¥ús·¥á Ä ·¥Ö·¥Ä·¥õ·¥Ä -\n</b>"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ <code>{user.id}</code></b>\n"
        f"<b> ú·¥Ä…¥·¥Ö ü·¥á ‚åØ @{user.username if user.username else 'none'}</b>\n\n"
        f"<b>·¥Ä·¥Ñ·¥Ñ·¥áss  Ä·¥á·¥†·¥è·¥ã·¥á·¥Ö  ô è {remover.mention}</b>\n"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ </b><code>{remover.id}</code>\n\n"
        f"<b>·¥Ä ô·¥è·¥ú·¥õ ·¥Ñ ú·¥Ä·¥õ -\n"
        f"<b>·¥Ö·¥ás…™…¢…¥·¥Ä·¥õ…™·¥è…¥ ‚åØ {chat.title}</b>\n"
        f"<b>…™·¥Ö·¥á…¥·¥õ…™“ì…™·¥á Ä ‚åØ </b><code>{chat.id}</b>\n"
        f"<b>·¥Ñ ú·¥Ä·¥õ  ú·¥Ä…¥·¥Ö ü·¥á ‚åØ @{chat.username if chat.username else 'none'}</b>"
        )
    await app.send_message(LOG_CHANNEL_ID, log_message)



@app.on_message(filters.command(["addsudo"]) & filters.user([OWNER_ID, SPECIAL_USER_ID]))
async def useradd(client, message: Message):
    if not message.reply_to_message and len(message.command) != 2:
        return await message.reply_text("…™·¥õ s·¥á·¥á·¥çs  ü…™·¥ã·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥ç·¥á ·¥õ·¥è ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥õ·¥è …¢…™·¥†·¥á  è·¥è·¥ú ·¥õ ú·¥á …¥·¥áx·¥õ s·¥õ·¥á·¥ò, ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä …™·¥Ö ·¥è Ä  Ä·¥á·¥ò ü è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á.")

    user = await extract_user(message)
    if not user:
        return await message.reply_text("·¥õ ú·¥á Ä·¥á ·¥°·¥Äs ·¥Ä…¥ …™ss·¥ú·¥á ·¥áx·¥õ Ä·¥Ä·¥Ñ·¥õ…™…¥…¢ ·¥õ ú·¥á ·¥ús·¥á Ä's …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥, ·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥.")

    if user.id == OWNER_ID:
        return await message.reply_text("·¥Ä Ä·¥á ·¥ú ·¥ã…™·¥Ö·¥Ö…™…¥…¢ …¥·¥è·¥è ô ?  ú·¥á …™s ·¥ç è ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä !")

    if user.id in SUDOERS:
        return await message.reply_text(f"{user.mention} …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥Äs ·¥Ä s·¥ú·¥Ö·¥è ·¥ús·¥á Ä.")

    added = await add_sudo(user.id)
    if added:
        SUDOERS.add(user.id)
        await message.reply_text(f"{user.mention}  ú·¥Äs  ô·¥á·¥á…¥ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥Äs ·¥Ä s·¥ú·¥Ö·¥è·¥á Ä.")
        
        await log_new_sudo_user(user, message.from_user, message.chat)
        
    else:
        await message.reply_text("·¥õ ú·¥á ·¥Ä·¥õ·¥õ·¥á·¥ç·¥ò·¥õ ·¥õ·¥è ·¥Ä·¥Ö·¥Ö ·¥õ ú·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Ä ·¥°·¥Äs ·¥ú…¥s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü. ·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥õ·¥õ·¥á·¥ç·¥ò·¥õ ·¥Ä…¢·¥Ä…™…¥.")




@app.on_message(filters.command(["delsudo", "rmsudo", "removerand", "removesudo"]) & filters.user([OWNER_ID, SPECIAL_USER_ID]))
async def userdel(client, message: Message):
    if not message.reply_to_message and len(message.command) != 2:
        return await message.reply_text("…™·¥õ s·¥á·¥á·¥çs  ü…™·¥ã·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥ç·¥á ·¥õ·¥è ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥õ·¥è …¢…™·¥†·¥á  è·¥è·¥ú ·¥õ ú·¥á …¥·¥áx·¥õ s·¥õ·¥á·¥ò, ·¥ò ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä …™·¥Ö ·¥è Ä  Ä·¥á·¥ò ü è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á.")

    user = await extract_user(message)
    if not user:
        return await message.reply_text("·¥õ ú·¥á Ä·¥á ·¥°·¥Äs ·¥Ä…¥ …™ss·¥ú·¥á ·¥áx·¥õ Ä·¥Ä·¥Ñ·¥õ…™…¥…¢ ·¥õ ú·¥á ·¥ús·¥á Ä's …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥, ·¥ò ü·¥á·¥Äs·¥á ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥.")

    if user.id == OWNER_ID:
        return await message.reply_text("·¥Ä Ä·¥á ·¥ú ·¥ã…™·¥Ö·¥Ö…™…¥…¢ …¥·¥è·¥è ô ?  ú·¥á …™s ·¥ç è ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä !")

    if user.id not in SUDOERS:
        return await message.reply_text(f"{user.mention} …™s …¥·¥è·¥õ ·¥Ä·¥ú·¥õ ú·¥è Ä…™·¥¢·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á s·¥ú·¥Ö·¥è.")

    removed = await remove_sudo(user.id)
    if removed:
        SUDOERS.remove(user.id)
        await message.reply_text(f"s·¥ú·¥Ö·¥è ·¥Ä·¥Ñ·¥Ñ·¥áss “ì·¥è Ä {user.mention}  ú·¥Äs  ô·¥á·¥á…¥  Ä·¥á·¥†·¥è·¥ã·¥á·¥Ö.")
        
        await log_removed_sudo_user(user, message.from_user, message.chat)
        
    else:
        await message.reply_text("·¥õ ú·¥á ·¥Ä·¥õ·¥õ·¥á·¥ç·¥ò·¥õ ·¥õ·¥è  Ä·¥á·¥ç·¥è·¥†·¥á ·¥õ ú·¥á s·¥ú·¥Ö·¥è ·¥ús·¥á Ä ·¥°·¥Äs ·¥ú…¥s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü. ·¥ò ü·¥á·¥Äs·¥á ·¥Ä·¥õ·¥õ·¥á·¥ç·¥ò·¥õ ·¥Ä…¢·¥Ä…™…¥.")



@app.on_message(filters.command(["sudolist", "sudoers", "specialusers"]) & ~BANNED_USERS)
async def sudoers_list(client, message: Message):
    if message.from_user.id != OWNER_ID and message.from_user.id not in SUDOERS:
        return await message.reply_text(" ô Ä·¥ú ú  è·¥è·¥ú' Ä·¥á …¥·¥è·¥õ ·¥á…¥·¥è·¥ú…¢ ú ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö .\n·¥†…™s…™·¥õ @zenitsu_bot_support")

    text = "<b>üëë ·¥Ö…™s·¥Äs·¥õ·¥á Äs ·¥è“ì ·¥Ä…¥·¥è·¥õ ú·¥á Ä  ü·¥á·¥†·¥á ü.</b>\n\n"
    text += "<b>‡πè ·¥ç è  ü·¥è Ä·¥Ö</b>\n"
    user = await client.get_users(OWNER_ID)
    user = user.first_name if not hasattr(user, "mention") else user.mention
    text += f"{user}\n\n"

    text += "<b>üî± s·¥ò·¥á·¥Ñ…™·¥Ä ü ·¥Ö…™s·¥Äs·¥õ·¥á Äs</b>\n"
    if isinstance(SPECIAL_USER_ID, list):
        for special_id in SPECIAL_USER_ID:
            try:
                user = await client.get_users(special_id)
                user_name = user.first_name if not hasattr(user, "mention") else user.mention
                text += f"‚Ä£ {user_name}\n"
            except Exception:
                text += f"‚Ä£ ·¥ú…¥·¥Ä ô ü·¥á ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú ·¥Ö·¥Ä·¥õ·¥Ä “ì·¥è Ä {special_id}.\n"
    else:
        try:
            user = await client.get_users(SPECIAL_USER_ID)
            user_name = user.first_name if not hasattr(user, "mention") else user.mention
            text += f"‚Ä£ {user_name}\n"
        except Exception:
            text += f"‚Ä£ ·¥ú…¥·¥Ä ô ü·¥á ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú ·¥Ö·¥Ä·¥õ·¥Ä “ì·¥è Ä {SPECIAL_USER_ID}.\n"

    text += "\n"

    text += "<b>‚ùÑÔ∏è s·¥ú·¥Ö·¥è·¥á Äs</b>\n"
    if not SUDOERS:
        text += "·¥õ ú·¥á Ä·¥á ·¥Ä Ä·¥á …¥·¥è s·¥ú·¥Ö·¥è·¥á Äs ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ü è."
    else:
        for sudo_id in SUDOERS:
            if sudo_id == OWNER_ID:
                continue
            try:
                user = await client.get_users(sudo_id)
                user_name = user.first_name if not hasattr(user, "mention") else user.mention
                text += f"¬ª {user_name}\n"
            except Exception:
                text += f"¬ª ·¥ú…¥·¥Ä ô ü·¥á ·¥õ·¥è “ì·¥á·¥õ·¥Ñ ú ·¥Ö·¥Ä·¥õ·¥Ä “ì·¥è Ä {sudo_id}.\n"

    await message.reply_text(text)



@app.on_chat_member_updated()
async def welcome_special_users(client, update: ChatMemberUpdated):
    new_chat_member = update.new_chat_member

    if new_chat_member is None:
        return

    if not hasattr(new_chat_member, 'user') or not hasattr(new_chat_member, 'status'):
        return

    if new_chat_member.status == ChatMemberStatus.MEMBER:
        user_id = new_chat_member.user.id
        chat = update.chat

        # Only send a welcome message for specific users
        if user_id == OWNER_ID:
            message = f"üî± ·¥ç è  ü·¥è Ä·¥Ö …™s …¥·¥è·¥° ·¥ò·¥Ä Ä·¥õ ·¥è“ì ·¥õ ú·¥á ·¥Ñ ú·¥Ä·¥õ."
        elif user_id in SPECIAL_USERS:
            message = f"üî± ·¥ç è  ü·¥è Ä·¥Ö …™s …¥·¥è·¥° ·¥ò·¥Ä Ä·¥õ ·¥è“ì ·¥õ ú·¥á ·¥Ñ ú·¥Ä·¥õ."
        elif user_id in SUDOERS:
            message = f"‚ùÑÔ∏è …¢ ü·¥è ô·¥Ä ü ·¥Ä·¥Ö·¥ç…™…¥ …™s …™…¥ ·¥õ ú·¥á ·¥Ñ ú·¥Ä·¥õ …¥·¥è·¥°."
        else:
            return  # Do nothing for other users

        # Send the welcome message
        await client.send_message(chat.id, message)
